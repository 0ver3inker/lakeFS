syntax = "proto3";

// Data model
message Blob {
    map<string, string> metadata = 2;
    repeated string blocks = 4;
}

message Entry {
    string address = 1;
    map<string, string> metadata = 2;
    uint64 mtime = 3;
}

message Tree {
    string parent = 1;
    map<string, string> metadata = 2;
}

message Commit {
    string rootTree = 1;
    repeated string parents = 2;
    string creator = 3;
    int64 timestamp = 4;
}

message Branch {
    string commit_hash = 1;
    string commit_root_hash = 2;
    string workspace_root_hash = 3;
}


// RPC
service Index {
    // workspace
    rpc Read(ReadRequest) returns (ReadResponse) {}
    rpc Write(WriteRequest) returns (WriteResponse) {}
    rpc Delete(DeleteRequest) returns (DeleteResponse) {}
    rpc List(ListRequest) returns (ListResponse) {}

    // merkle tree
    // rpc Commit(CommitRequest) returns (CommitResponse) {}
    // rpc Diff(DiffRequest) returns (DiffResponse) {}
    // rpc Merge(MergeRequest) returns (MergeResponse) {}
    
    // branches
    // rpc DeleteBranch(DeleteBranchRequest) returns (DeleteBranchResponse) {}
    // rpc ListBranches(ListBranchesRequest) returns (ListBranchesResponse) {}
}

message RPCError {
    uint32 code = 1;
    string message = 2;
}

// read
message ReadRequest {
    string client =1;
    string repo = 2;
    string branch = 3;
    string path = 4;
}

message ReadResponse {
    Blob blob = 1;
}

// write
message WriteRequest {
    string client =1;
    string repo = 2;
    string branch = 3;
    string path = 4;
    Blob blob = 5;
}
message WriteResponse {}

// delete
message DeleteRequest {
    string client =1;
    string repo = 2;
    string branch = 3;
    string path = 4;
}

message DeleteResponse {}


// list
message ListRequest {
    string client =1;
    string repo = 2;
    string branch = 3;
    string path = 4;
}

message ListResponse {
    Tree directory = 1;
    repeated Entry entries = 2;
}
